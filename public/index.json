[
{
	"uri": "//localhost:1313/",
	"title": "Amazon RDS for SQL Server",
	"tags": [],
	"description": "",
	"content": "Work with Amazon RDS Overall Amazon RDS for SQL Server is a fully managed database service that allows you to easily set up, operate, and scale SQL Server deployments in the cloud. With Amazon RDS, you can deploy multiple versions and editions of SQL Server in minutes with cost-efficient and re-sizable compute capacity.\nIn this workshop, participants will learn how to set up Amazon RDS for SQL Server, configure the instance, explore different backup strategies, secure the instance, and understand scaling and performance monitoring techniques.\nContent Introduction Create a new RDS Sql Server High availability Backup and restore Clean up resources "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createdb/",
	"title": "Create a RDS DB Instance",
	"tags": [],
	"description": "",
	"content": " Open the Amazon RDS service console and navigate to the Databases section.\nClick Create database to start the configuration process.\nChoose a Database Creation Method\nIn the Choose a database creation method section, select Standard Create. Under Engine options, select Microsoft SQL Server. In the Edition section, select SQL Server Enterprise Edition. Choose the latest version (e.g., SQL Server 2019 15.xx.xx). For this workshop SQL Server Enterprise Edition has been selected and will incur some cost. To use free tier, select SQL Server Express Edition under Editions. Note that some of the advanced features are not supported with SQL Server Express Edition.\nTemplates\nSelect the Production template. Settings\nDB instance identifier: sqlserver-rdssql Master username: admin Master password: Enter a password. DB Instance Size\nDB instance class: Select Standard classes and choose db.m5.xlarge from the dropdown. Storage\nStorage type: Provisioned IOPS (SSD) Allocated storage: 20 GiB Provisioned IOPS: 1000 Storage autoscaling: Check Enable storage autoscaling Maximum storage threshold: 1000 GiB Availability \u0026amp; Durability\nFor this workshop, do not enable Multi-AZ. This feature will be covered in a future section of the workshop. Connectivity\nCompute resource: Don\u0026rsquo;t connect to an EC2 compute resource. Expand Additional connectivity configuration: Publicly accessible: No VPC security group: Choose existing Availability Zone: Leave default Database port: Leave default Create the Database\nLeave all other options default and click on Create database to create the database. It will take a few minutes to provision the Database Instance. You can monitor the provisioning progress from the Databases List. The status will change to Available once the instance is provisioned. Press the Refresh icon to check the latest status progress. "
},
{
	"uri": "//localhost:1313/5-cleanupresources/5.1-deletedbinstance/",
	"title": "Delete Database Instance",
	"tags": [],
	"description": "",
	"content": "Follow these steps to remove any read replica or database instance(s) created in the workshop.\nDelete Database Instance\nOpen the Amazon RDS service console and click on Databases from the left navigation pane.\nFrom the list of databases, select workshop-maz-rds-sqlserver under DB identifier and then click on Modify. On the modify page, scroll to the bottom of the page. Uncheck the Enable deletion protection option, then click on Continue. Select Apply immediately, and click on Modify DB Instance. From the list of databases, select workshop-maz-rds-sqlserver, and select Delete from the Actions dropdown menu. On the Delete instance page, uncheck the Create final snapshot? and Retain automated backups options. Select the option for I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available. Type delete me in the textbox to confirm deletion of the database instance, then press the Delete button. "
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Amazon RDS for SQL Server is a fully managed database service that allows you to easily set up, operate, and scale SQL Server deployments in the cloud. With Amazon RDS, you can deploy multiple versions and editions of SQL Server in minutes with cost-efficient and re-sizable compute capacity.\nBy using Amazon RDS, you gain the following advantages over traditional database management methods:\nAutomated Backups and Recovery: RDS automatically handles backups, snapshots, and point-in-time recovery, reducing the risk of data loss. Scalability: Easily scale your database’s compute and storage resources with just a few clicks, adapting quickly to changes in demand. High Availability: RDS provides built-in support for Multi-AZ (Availability Zone) deployments, ensuring that your database remains available even in the event of hardware failure. Enhanced Security: Offers encryption at rest and in transit, fine-grained access control, and integration with AWS IAM for user management, making your data more secure. Performance Monitoring: Integrated performance monitoring tools such as Amazon CloudWatch and Performance Insights help you keep track of database performance and optimize as needed. Cost-Efficiency: Pay only for the resources you use, with flexible pricing options and the ability to scale up or down as needed, helping you manage costs effectively. With these advantages, Amazon RDS helps simplify database management, enhance security, and improve scalability, making it an efficient and cost-effective choice for your data needs.\n"
},
{
	"uri": "//localhost:1313/4-backupandrestore/4.1-reviewoptions/",
	"title": "Review Backup Options and Take a Manual Snapshot",
	"tags": [],
	"description": "",
	"content": " Click on Databases from the left navigation pane.\nFrom the list of databases, click on sqlerver-rdsssql under DB Identifier. Click on the Maintenance and backups tab and scroll down to the Backup and Snapshots sections.\nIn the Backup section, you will notice that Automated Backups are enabled for 7 days and see the Backup window. Under Snapshots, you may see any snapshots that have been taken so far. If none have been taken, this section will be empty. From the Snapshots section, click on Take snapshot.\nIn the Take DB Snapshot dialog, provide the Snapshot name: snapshot-sqlerver-rdsssql and click on Take Snapshot. Under Snapshots, click on the Manual tab and notice the snapshot you just took.\nIt may take about 20 minutes for the operation to complete and for the snapshot creation time to appear. You may proceed with the rest of the labs and come back later to check on the status. Optionally, you may view all snapshots by clicking on Snapshots section. To see automatic snapshots, click on System tab "
},
{
	"uri": "//localhost:1313/2-prerequiste/",
	"title": "Create a new RDS SQL Server ",
	"tags": [],
	"description": "",
	"content": "Content: Create new database instance Get Endpoint for database instance Retrieve Database Password from Secrets Manager Connect to RDS instance using SSMS "
},
{
	"uri": "//localhost:1313/5-cleanupresources/5.2-deletes3buckets/",
	"title": "Delete S3 Buckets",
	"tags": [],
	"description": "",
	"content": " Navigate to S3 service console. From list of buckets select the bucket you created and then click on Empty. On the Empty Bucket page, type permanently delete in the box to confirm the operation, then click on Empty. From list of buckets, select the bucket you created and then click on Delete.\nOn the Delete Bucket page, type the name of bucket on the textbox to confirm deletion of the bucket, then click on Confirm. "
},
{
	"uri": "//localhost:1313/4-backupandrestore/4.2-pointintimerecovery/",
	"title": "Point In Time Recovery",
	"tags": [],
	"description": "",
	"content": "Point in time recovery restores the entire snapshot as a separate instance. In other words, Amazon RDS automation provisions a new instance and then restores all databases from the snapshot image.\nOpen the Amazon RDS service console. Click on Databases from the left navigation pane.\nFrom the list of databases, select sqlerver-rdsssql under DB Identifier.\nFrom the Actions menu, click on Restore to point in time. On the Restore to point in time page, select Latest restorable time from the Restore time option. You may also select a custom point in time by choosing Custom date and time and providing the desired date and time.\nProvide the following information:\nDB instance identifier: restored-sqlerver-rdsssql (example) DB instance class: Burstable classes – db.t3.2xlarge Scroll down to the bottom of the page and click on Restore to point in time. On the Databases page, you will see that the new instance restored-sqlerver-rdsssql is in the creating state. Once completed, the status will change from Creating to Available. You may connect to the restored instance using its endpoint. The operation will take a few minutes to complete.\nNote:\nRestore time varies depending on the number of transaction log backups needed to be applied on top of the full backup. To reduce recovery time, you may take manual snapshot backups between daily automatic snapshot backups. "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.2-retrieveendpoint/",
	"title": "Retrieve DB Instance Endpoint",
	"tags": [],
	"description": "",
	"content": " To connect to the DB instance and use it in subsequent labs, you need to retrieve the DB instance endpoint. Open the Amazon RDS console and go to the Databases section. Select the DB Identifier: sqlserver-rdssql. Retrieve the Endpoint.\nGo to the Connectivity and security tab on the details page.\nIn the Endpoint \u0026amp; port section, locate the endpoint of the instance. Copy the endpoint and paste it into a notepad to keep it handy for the next steps.\n"
},
{
	"uri": "//localhost:1313/3-highavailability/",
	"title": "Enable Multi-AZ HA",
	"tags": [],
	"description": "",
	"content": "The instructions on this page provide hands-on experience in enabling Multi-AZ for the RDS instance created in the Create the DB Instance section.\nNavigate to the Databases section of RDS.\nSelect the DB Identifier: sqlserver-rdssql and click on Modify. From the Modify DB Instance page, scroll down to Multi-AZ deployment and select Yes (Mirroring / Always On). Scroll down to the bottom of the page and click on Continue. On the Summary page under Scheduling of modifications, select Apply Immediately and then click on Modify DB Instance. Note: The Apply Immediately selection will start the process immediately and could cause downtime. It is recommended to apply these changes during a maintenance window in production or a similar environment. This can be done by selecting Apply during the next scheduled maintenance window. It will take about 30 minutes for Multi-AZ to be set up. Once the process is complete, the status of the database instance will change from Modifying to Available.\nFrom the Databases page, check that the status of the database instance sqlerver-rdsssql is Available, then click on the instance name.\nOn the Summary page, click on the Configuration tab. Note that the Multi-AZ information section shows Yes (Always On). Also, check that the Region \u0026amp; AZ information and Secondary Zone information sections display primary and secondary instances in different availability zones. On the Summary page, click on the Connectivity \u0026amp; security tab. Copy and paste the Listener endpoint information to notepad for later use. "
},
{
	"uri": "//localhost:1313/4-backupandrestore/",
	"title": "Backup and Restore",
	"tags": [],
	"description": "",
	"content": "Content: Review backup options and manual snapshot Perform Point in time recovery Enable native backup and restore option Perform native backup "
},
{
	"uri": "//localhost:1313/5-cleanupresources/",
	"title": "Clean up resources",
	"tags": [],
	"description": "",
	"content": "Content: Delete Database Instance Delete S3 Buckets Delete Cloudformation Stack "
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]